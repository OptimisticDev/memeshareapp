[{"D:\\MemeVerse\\client\\src\\App.js":"1","D:\\MemeVerse\\client\\src\\reducers\\userReducer.js":"2","D:\\MemeVerse\\client\\src\\constants\\constants.js":"3","D:\\MemeVerse\\client\\src\\components\\screens\\Signup.js":"4","D:\\MemeVerse\\client\\src\\components\\shared\\UserPostCard.js":"5","D:\\MemeVerse\\client\\src\\components\\shared\\PostCard.js":"6","D:\\MemeVerse\\client\\src\\constants\\apiUrl.js":"7","D:\\MemeVerse\\client\\src\\components\\screens\\ResetPassword.js":"8","D:\\MemeVerse\\client\\src\\index.js":"9","D:\\MemeVerse\\client\\src\\reportWebVitals.js":"10","D:\\MemeVerse\\client\\src\\components\\screens\\Signin.js":"11","D:\\MemeVerse\\client\\src\\constants\\initialState.js":"12","D:\\MemeVerse\\client\\src\\helpers\\authorizedHeaderHelper.js":"13","D:\\MemeVerse\\client\\src\\components\\screens\\NewPassword.js":"14","D:\\MemeVerse\\client\\src\\components\\screens\\Profile.js":"15","D:\\MemeVerse\\client\\src\\components\\screens\\Home.js":"16","D:\\MemeVerse\\client\\src\\components\\Navbar.js":"17","I:\\Deployment\\client\\src\\App.js":"18","I:\\Deployment\\client\\src\\components\\screens\\Home.js":"19","I:\\Deployment\\client\\src\\reducers\\userReducer.js":"20","I:\\Deployment\\client\\src\\components\\screens\\NewPassword.js":"21","I:\\Deployment\\client\\src\\components\\shared\\UserPostCard.js":"22","I:\\Deployment\\client\\src\\components\\shared\\PostCard.js":"23","I:\\Deployment\\client\\src\\constants\\apiUrl.js":"24"},{"size":1867,"mtime":1609790949855,"results":"25","hashOfConfig":"26"},{"size":226,"mtime":1609500054186,"results":"27","hashOfConfig":"26"},{"size":92,"mtime":1609485747468,"results":"28","hashOfConfig":"26"},{"size":2786,"mtime":1609497074353,"results":"29","hashOfConfig":"26"},{"size":193,"mtime":1609527315805,"results":"30","hashOfConfig":"26"},{"size":2093,"mtime":1609787912082,"results":"31","hashOfConfig":"26"},{"size":810,"mtime":1609790090143,"results":"32","hashOfConfig":"26"},{"size":1727,"mtime":1609585500496,"results":"33","hashOfConfig":"26"},{"size":532,"mtime":1609420878594,"results":"34","hashOfConfig":"26"},{"size":362,"mtime":1607610113339,"results":"35","hashOfConfig":"26"},{"size":2963,"mtime":1609791028299,"results":"36","hashOfConfig":"26"},{"size":825,"mtime":1609582497291,"results":"37","hashOfConfig":"26"},{"size":254,"mtime":1609504934165,"results":"38","hashOfConfig":"26"},{"size":1940,"mtime":1609584578538,"results":"39","hashOfConfig":"26"},{"size":4968,"mtime":1609592411946,"results":"40","hashOfConfig":"26"},{"size":2106,"mtime":1609790065066,"results":"41","hashOfConfig":"26"},{"size":1621,"mtime":1609791326382,"results":"42","hashOfConfig":"26"},{"size":1867,"mtime":1609853900988,"results":"43","hashOfConfig":"44"},{"size":2017,"mtime":1609740978000,"results":"45","hashOfConfig":"44"},{"size":215,"mtime":1609740978000,"results":"46","hashOfConfig":"44"},{"size":1826,"mtime":1609846881665,"results":"47","hashOfConfig":"44"},{"size":182,"mtime":1609740978000,"results":"48","hashOfConfig":"44"},{"size":2068,"mtime":1609860741296,"results":"49","hashOfConfig":"44"},{"size":733,"mtime":1609853734410,"results":"50","hashOfConfig":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"h5rtxv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"mfeg6l",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MemeVerse\\client\\src\\App.js",["108","109"],"D:\\MemeVerse\\client\\src\\reducers\\userReducer.js",[],["110","111"],"D:\\MemeVerse\\client\\src\\constants\\constants.js",[],["112","113"],"D:\\MemeVerse\\client\\src\\components\\screens\\Signup.js",[],"D:\\MemeVerse\\client\\src\\components\\shared\\UserPostCard.js",["114"],"D:\\MemeVerse\\client\\src\\components\\shared\\PostCard.js",["115"],"D:\\MemeVerse\\client\\src\\constants\\apiUrl.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\ResetPassword.js",[],"D:\\MemeVerse\\client\\src\\index.js",[],["116","117"],"D:\\MemeVerse\\client\\src\\reportWebVitals.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\Signin.js",["118"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport axios from \"axios\";\r\nimport M from \"materialize-css\";\r\n\r\nimport {\r\n  SIGNIN_USER_ERROR_INITIAL_STATE,\r\n  SIGNIN_USER_INITIAL_STATE,\r\n} from \"../../constants/initialState\";\r\nimport { USER_SIGNIN_POST_URL } from \"../../constants/apiUrl\";\r\nimport {\r\n  LOCAL_STORAGE_JWT_KEY,\r\n  LOCAL_STORAGE_USER_KEY,\r\n} from \"../../constants/constants\";\r\n\r\nimport Error from \"../shared/Error\";\r\n\r\nconst Signin = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const [signInUser, setSignInUser] = useState(SIGNIN_USER_INITIAL_STATE);\r\n  const [errorMsg, setErrorMsg] = useState(SIGNIN_USER_ERROR_INITIAL_STATE);\r\n\r\n  const signInUserHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const key = e.target.id;\r\n    const value = e.target.value;\r\n\r\n    setSignInUser({ ...signInUser, [key]: value });\r\n    setErrorMsg({\r\n      ...errorMsg,\r\n      ...{\r\n        [key]: SIGNIN_USER_ERROR_INITIAL_STATE[key],\r\n        invalidUser: SIGNIN_USER_ERROR_INITIAL_STATE.invalidUser,\r\n      },\r\n    });\r\n  };\r\n\r\n  const signInSubmitHandler = async () => {\r\n    const { data } = await axios.post(USER_SIGNIN_POST_URL, signInUser);\r\n\r\n    if (data) {\r\n      const { errors, success, message, user, token } = data;\r\n      if (success) {\r\n        localStorage.setItem(LOCAL_STORAGE_JWT_KEY, token);\r\n        localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(user));\r\n\r\n        dispatch({ type: \"USER\", payload: user });\r\n\r\n        M.toast({ html: message, classes: \"success\" });\r\n\r\n        setSignInUser({ ...SIGNIN_USER_INITIAL_STATE });\r\n        history.push(\"/home\");\r\n      } else {\r\n        setErrorMsg({ ...errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mycard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2 className=\"brand-logo\">MemeVerse</h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          placeholder=\"email\"\r\n          value={signInUser.email}\r\n          onChange={signInUserHandler}\r\n        />\r\n        {errorMsg.email && <Error error={errorMsg.email} />}\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"password\"\r\n          value={signInUser.password}\r\n          onChange={signInUserHandler}\r\n        />\r\n        {errorMsg.password && <Error error={errorMsg.password} />}\r\n        {errorMsg.invalidUser && <Error error={errorMsg.invalidUser} />}\r\n        <button\r\n          className=\"waves-effect waves-light red lighten-2 btn\"\r\n          onClick={signInSubmitHandler}\r\n        >\r\n          SignIn\r\n        </button>\r\n        <h5>\r\n          <Link to=\"/signup\">Don't have an account ?</Link>\r\n        </h5>\r\n        <p>\r\n          <Link to=\"/reset\">Forget password ?</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","D:\\MemeVerse\\client\\src\\constants\\initialState.js",[],"D:\\MemeVerse\\client\\src\\helpers\\authorizedHeaderHelper.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\NewPassword.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\Profile.js",["119","120","121"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport axios from \"axios\";\r\nimport M from \"materialize-css\";\r\n\r\nimport {\r\n  POST_ERROR_INITIAL_STATE,\r\n  POST_INITIAL_STATE,\r\n} from \"../../constants/initialState\";\r\nimport {\r\n  CLOUDNARY_API_URL,\r\n  POST_GET_MYPOST_URL,\r\n  POST_POST_URL,\r\n} from \"../../constants/apiUrl\";\r\n\r\nimport Error from \"../shared/Error\";\r\nimport UserPostCard from \"../shared/UserPostCard\";\r\n\r\nimport { authorizedHeaderHelper } from \"../../helpers/authorizedHeaderHelper\";\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [post, setPost] = useState(POST_INITIAL_STATE);\r\n  const [errorMsg, setErrorMsg] = useState(POST_ERROR_INITIAL_STATE);\r\n  const [image, setImage] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const postHandler = (e) => {\r\n    e.preventDefault();\r\n    const key = e.target.id;\r\n    const value = e.target.value;\r\n    setPost({ ...post, [key]: value });\r\n  };\r\n\r\n  const uploadPhoto = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"Memeverse\");\r\n    data.append(\"cloud_name\", \"dhku5t0x0\");\r\n\r\n    if (image) {\r\n      const res = await axios.post(CLOUDNARY_API_URL, data);\r\n      if (res) {\r\n        const { data } = res;\r\n        setPost({ ...post, image: data.url });\r\n      }\r\n    } else {\r\n      setErrorMsg({ ...errorMsg, image: \"You haven't attach photo yet!\" });\r\n    }\r\n  };\r\n\r\n  const postDetails = async () => {\r\n    if (post.image) {\r\n      const headers = authorizedHeaderHelper();\r\n\r\n      const { data } = await axios.post(POST_POST_URL, post, {\r\n        headers: headers,\r\n      });\r\n\r\n      if (data) {\r\n        const { errors, success, message, user, token } = data;\r\n\r\n        if (success) {\r\n          M.toast({ html: message, classes: \"success\" });\r\n          setPost({ ...POST_INITIAL_STATE });\r\n          history.push(\"/\");\r\n        } else {\r\n          M.toast({ html: errors.invalidUser, classes: \"error\" });\r\n          setErrorMsg({ ...errors });\r\n        }\r\n      }\r\n    } else {\r\n      setErrorMsg({ ...errorMsg, image: \"Image didn't upload yet!\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const headers = authorizedHeaderHelper();\r\n\r\n    const getAllPosts = async () => {\r\n      const { data } = await axios.get(POST_GET_MYPOST_URL, { headers });\r\n\r\n      if (data) {\r\n        const { myPosts } = data;\r\n        setPosts(myPosts);\r\n      }\r\n    };\r\n\r\n    getAllPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profile\">\r\n        <div className=\"profile__content\">\r\n          <h5>{state?.name}</h5>\r\n          <h6>\r\n            {posts.length <= 1\r\n              ? `${posts.length} post`\r\n              : `${posts.length} posts`}\r\n          </h6>\r\n        </div>\r\n        <div className=\"card input-field generate__post\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            placeholder=\"title\"\r\n            value={post.title}\r\n            onChange={postHandler}\r\n          />\r\n          {errorMsg.title && <Error error={errorMsg.title} />}\r\n          <input\r\n            type=\"text\"\r\n            id=\"body\"\r\n            placeholder=\"body\"\r\n            value={post.body}\r\n            onChange={postHandler}\r\n          />\r\n          {errorMsg.body && <Error error={errorMsg.body} />}\r\n          <div className=\"file-field input-field\">\r\n            <div className=\"red lighten-2 btn\">\r\n              <span>Attach photo</span>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setErrorMsg({ ...POST_ERROR_INITIAL_STATE });\r\n                  setImage(e.target.files[0]);\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n              <input\r\n                className=\"file-path validate\"\r\n                type=\"text\"\r\n                value={post.image}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          {errorMsg.image && <Error error={errorMsg.image} />}\r\n          <button\r\n            className={\r\n              post.image\r\n                ? \"waves-effect waves-light green lighten-2 btn\"\r\n                : \"waves-effect waves-light red lighten-2 btn\"\r\n            }\r\n            style={{ marginRight: \"10px\" }}\r\n            onClick={uploadPhoto}\r\n          >\r\n            Upload Photo\r\n          </button>\r\n          <button\r\n            className=\"waves-effect waves-light red lighten-2 btn\"\r\n            onClick={postDetails}\r\n          >\r\n            Share Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"gallary-container\">\r\n        {posts.length > 0 &&\r\n          posts.map((post, i) => <UserPostCard key={i} image={post.image} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n",["122","123"],"D:\\MemeVerse\\client\\src\\components\\screens\\Home.js",["124"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport {\r\n  POST_GET_URL,\r\n  POST_UPDATE_LIKE_UNLIKE_URL,\r\n  POST_UPDATE_COMMENT_URL,\r\n} from \"../../constants/apiUrl\";\r\n\r\nimport PostCard from \"../shared/PostCard\";\r\n\r\nimport { authorizedHeaderHelper } from \"../../helpers/authorizedHeaderHelper\";\r\n\r\nconst Home = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    const headers = authorizedHeaderHelper();\r\n\r\n    const getAllPosts = async () => {\r\n      const { data } = await axios.get(POST_GET_URL, { headers });\r\n\r\n      if (data) {\r\n        const { posts, success } = data;\r\n        if (success) {\r\n          setPosts(posts);\r\n        }\r\n      }\r\n    };\r\n\r\n    getAllPosts();\r\n  }, []);\r\n\r\n  const likeUnlikePostHandler = async (id, key) => {\r\n    const headers = authorizedHeaderHelper();\r\n\r\n    const postId = { postId: id };\r\n\r\n    const res = await axios.put(POST_UPDATE_LIKE_UNLIKE_URL, postId, {\r\n      headers,\r\n    });\r\n    if (res) {\r\n      const { data } = res;\r\n\r\n      const updateData = posts;\r\n      updateData[key].likes = data.likes;\r\n\r\n      setPosts([]);\r\n      setPosts(updateData);\r\n    }\r\n  };\r\n\r\n  const commentHandler = async (text, postId, key) => {\r\n    const headers = authorizedHeaderHelper();\r\n\r\n    const newComment = { postId, text };\r\n    if (text) {\r\n      const res = await axios.put(POST_UPDATE_COMMENT_URL, newComment, {\r\n        headers,\r\n      });\r\n      if (res) {\r\n        const { data } = res;\r\n        console.log(data);\r\n        const updateData = posts;\r\n        updateData[key].comments = data.comments;\r\n\r\n        setPosts([]);\r\n        setPosts(updateData);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    posts.length > 0 &&\r\n    posts.map((post, i) => (\r\n      <PostCard\r\n        key={i}\r\n        index={i}\r\n        id={state._id}\r\n        data={post}\r\n        likeUnlikePost={likeUnlikePostHandler}\r\n        commentPost={commentHandler}\r\n      />\r\n    ))\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\MemeVerse\\client\\src\\components\\Navbar.js",[],"I:\\Deployment\\client\\src\\App.js",["125","126"],"import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/screens/Home\";\nimport Signin from \"./components/screens/Signin\";\nimport Signup from \"./components/screens/Signup\";\nimport Profile from \"./components/screens/Profile\";\nimport ResetPassword from \"./components/screens/ResetPassword\";\nimport NewPassword from \"./components/screens/NewPassword\";\n\nimport { reducer, initialState } from \"./reducers/userReducer\";\nimport { LOCAL_STORAGE_USER_KEY } from \"./constants/constants\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(LOCAL_STORAGE_USER_KEY));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n      history.push(\"/home\");\n    } else {\n      if (!history.location.pathname.startsWith(\"/reset\"))\n        history.push(\"/signin\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/home\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route exact path=\"/reset\">\n        <ResetPassword />\n      </Route>\n      <Route path=\"/reset/:token\">\n        <NewPassword />\n      </Route>\n    </Switch>\n  );\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <Router>\n        <Navbar />\n        <Routing />\n      </Router>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","I:\\Deployment\\client\\src\\components\\screens\\Home.js",["127"],"I:\\Deployment\\client\\src\\reducers\\userReducer.js",[],"I:\\Deployment\\client\\src\\components\\screens\\NewPassword.js",[],"I:\\Deployment\\client\\src\\components\\shared\\UserPostCard.js",["128"],"I:\\Deployment\\client\\src\\components\\shared\\PostCard.js",["129"],"import React, { useState } from \"react\";\n\nconst PostCard = (props) => {\n  const [comment, setComment] = useState(\"\");\n  const { _id, title, body, image, postedBy, likes, comments } = props.data;\n  return (\n    <div className=\"post\">\n      <div className=\"card post__card\">\n        <h5>{postedBy?.name}</h5>\n        <h5>{image}</h5>\n        <div className=\"card-image\">\n          <img src={image} alt=\"post image\" />\n        </div>\n        <div className=\"card-content post__content\">\n          {likes.includes(props.id) ? (\n            <i\n              className=\"material-icons\"\n              style={{ color: \"#0277bd\", cursor: \"pointer\" }}\n              onClick={(e) => props.likeUnlikePost(_id, props.index)}\n            >\n              thumb_down\n            </i>\n          ) : (\n            <i\n              className=\"material-icons\"\n              style={{ color: \"#e57373\", cursor: \"pointer\" }}\n              onClick={(e) => props.likeUnlikePost(_id, props.index)}\n            >\n              thumb_up\n            </i>\n          )}\n\n          <h6>\n            {likes.length <= 1\n              ? `${likes.length} like`\n              : `${likes.length} likes`}\n          </h6>\n          <h6>{title}</h6>\n          <p>{body}</p>\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              placeholder=\"add comments..\"\n              onChange={(e) => setComment(e.target.value)}\n            />\n          </div>\n          <button\n            className=\"waves-effect waves-light red lighten-2 btn\"\n            onClick={(e) => props.commentPost(comment, _id, props.index)}\n          >\n            Comment\n          </button>\n          {comments.length > 0 &&\n            comments.map((comment, i) => (\n              <div className=\"comment card\" key={i}>\n                <h6>\n                  <span>{comment.commentedBy?.name}</span>\n                </h6>\n                <p className=\"comment-tetx\">{comment.text}</p>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","I:\\Deployment\\client\\src\\constants\\apiUrl.js",[],{"ruleId":"130","severity":1,"message":"131","line":24,"column":11,"nodeType":"132","messageId":"133","endLine":24,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":34,"column":6,"nodeType":"136","endLine":34,"endColumn":8,"suggestions":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":6,"column":7,"nodeType":"146","endLine":6,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":11,"column":11,"nodeType":"146","endLine":11,"endColumn":30},{"ruleId":"138","replacedBy":"147"},{"ruleId":"140","replacedBy":"148"},{"ruleId":"130","severity":1,"message":"131","line":21,"column":11,"nodeType":"132","messageId":"133","endLine":21,"endColumn":16},{"ruleId":"130","severity":1,"message":"149","line":25,"column":18,"nodeType":"132","messageId":"133","endLine":25,"endColumn":26},{"ruleId":"130","severity":1,"message":"150","line":64,"column":43,"nodeType":"132","messageId":"133","endLine":64,"endColumn":47},{"ruleId":"130","severity":1,"message":"151","line":64,"column":49,"nodeType":"132","messageId":"133","endLine":64,"endColumn":54},{"ruleId":"138","replacedBy":"152"},{"ruleId":"140","replacedBy":"153"},{"ruleId":"130","severity":1,"message":"149","line":16,"column":18,"nodeType":"132","messageId":"133","endLine":16,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":24,"column":11,"nodeType":"132","messageId":"133","endLine":24,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":34,"column":6,"nodeType":"136","endLine":34,"endColumn":8,"suggestions":"154"},{"ruleId":"130","severity":1,"message":"149","line":16,"column":18,"nodeType":"132","messageId":"133","endLine":16,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":6,"column":7,"nodeType":"146","endLine":6,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":12,"column":11,"nodeType":"146","endLine":12,"endColumn":47},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["157"],"no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["158"],["159"],"'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'token' is assigned a value but never used.",["158"],["159"],["160"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"161","fix":"162"},"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"163"},"Update the dependencies array to be: [dispatch, history]",{"range":"164","text":"165"},{"range":"166","text":"165"},[1133,1135],"[dispatch, history]",[1133,1135]]